[{"body":"Links Project slides PDF project report Github Description The goal of this project was to reproduce and extend results from [1] which uses the Stochastic Average Gradient algorithm (SAG [2]) to solve regularized optimal transport problems faster. We compare SAG with other optimization algorithms, including SAGA [3]. After comparing the regularized optimal transport convergence results for these algorithms, I studied an optimal school placement and allocation problem in several French regions.\nThe figures below show some results of solving the semi-discrete optimal transport problem between the school positions and the population density. This enables finding an assignment mapping areas to school which is optimal with respect to a metric on the studied space. The metric here is absolute distance, but it should rather be the real travel distance to be realistic.\nThe repartition of schools in the Rennes school administrative area (source: data.gouv.fr). Relative population density in each communal district of the Bretagne region (log-scale, source: data.gouv.fr). Results of the semi-discrete optimal transport estimation between the population density (continuous) and the school locations (discrete). The image shows the $\\bar{c}$-transform, see the report for details. An optimal assignment can be extracted from this distribution. This project was my final evaluation for the course Mathematical Foundations Of Data Science taught by Gabriel Peyré in 2019.\n","title":"Stochastic optimization for large scale optimal transport","url":"https://hugocisneros.com/projects/stochastic_optimization_for_large_scale_optimal_transport/"},{"body":"Links Project slides PDF project report Description This project was part of the course Graphs in Machine learning taught by Michal Valko. The project was proposed by Peter Battaglia and supervised by Peter and Michal together.\nThe goal of this project was to apply graph neural networks on the influence maximization (IM) problem for a graph with the independent cascade (IC) assumption (more details in the report). The project was in collaboration with Hind Dadoun\n","title":"Graph neural networks for influence maximization","url":"https://hugocisneros.com/projects/graph_nn_for_influence_maximization/"},{"body":"Links Project slides Project report Description The goal of this project was to write a review of adversarial examples in RL as of January 2019. It was also made into a talk for which the slides can be found above.\nWe begin with a brief review of adversarial examples in Deep learning. These examples are input values specifically crafted to fool a classifier into assigning it the wrong class. For example, an image could be made to look like a cat but optimized so that a object recognition neural network classifies it as a dog.\nAt the time of the report, most adversarial attacks on RL exploit the flaws within the deep neural networks used in common algorithms such as deep Q-learning. In the review, we identify three classes of attacks:\nNon-targeted attacks: The goal is to make the agent choose an action that is not the optimal one. Targeted attacks: The goal is to make the agent go in a particular state. Training-time attacks: These attacks are assumed to be performed during the training of the model, and the goal is to change the training data so that the model is not trained properly. The field of adversarial attacks is crucial for the development of RL models in production. If we ever have widespread adoption of RL algorithms in production systems, these flaws will be exploited. Researching these attacks is essential for building a better understanding and better defense mechanisms.\nThis project was a collaboration with Clément Acher, part of a reinforcement learning course taught by Alessandro Lazaric and Matteo Pirotta.\n","title":"Adversarial examples in reinforcement learning","url":"https://hugocisneros.com/projects/adversarial_rl/"},{"body":" Links App URL GitHub repo This project is a location tracking server that receives data from the Overland GPS tracker app running on my phone. This app tracks my location, but instead of sending it to Google or any other big corporation, it sends it to my private server running Roverland.\nAs I\u0026rsquo;m writing this, I have been tracking my location for seven months. My whole location history only takes up 43Mb once compressed.\nThanks to this project, I can go back in time and figure out exactly where I was anytime (as long as I had my phone with the app turned on) while preserving my privacy. I might also find this location archive useful in the future.\nFeatures Multiple user accounts. Web interface. Location, Altitude, Battery level and state, Movement type, and current wifi name tracking. Planned:\nLocation-based search Path optimization Better UI Store user preferences and allow setting colors, theme, etc. A quick description of the app The app architecture Interface Screenshot of the main map interface (a walk in Paris in October 2022) ","title":"Roverland location tracking server","url":"https://hugocisneros.com/projects/location_tracking_server/"},{"body":"Links Github repo Description This is a Rust implementation of the range variant of Asymmetric numeral systems (ANS). It is an entropy coding method which combines the compression ratio of arithmetic coding with the speed of Huffman coding, making it an essential algorithm which is included in many modern compression utilities.\n","title":"Asymmetric numeral systems in Rust","url":"https://hugocisneros.com/projects/asymmetric_numeral_systems_rust/"},{"body":"Links Project slides PDF project report Description This project was part of the course Theoretical deep learning (L\u0026rsquo;apprentissage par réseaux de neurones profonds, taught in French) by Stéphane Mallat at Collège de France.\nThis course was composed of theoretical lectures and a machine learning challenge.\nI worked on an intent prediction problem for drug-related question, proposed by the healthcare startup Posos. The goal was to classify real user questions into one of 52 classes representing the type of drug-related information they are looking for.\nThe final solution used word embeddings and a convolutional neural network to classify the sentences.\n","title":"Posos Challenge","url":"https://hugocisneros.com/projects/posos_dl/"},{"body":"Links Project slides Description This project\u0026rsquo;s goal was to implement style transfer techniques based on GANs. We applied several algorithms on our own datasets of landscape pictures scraped from Flickr and frames from anime extracted automatically.\nThis project was a collaboration with Clément Acher and was part of the course Object recognition and computer vision taught by Jean Ponce, Ivan Laptev, Cordelia Schmid and Josef Sivic.\n","title":"Style transfer with generative adversarial neural networks","url":"https://hugocisneros.com/projects/style_transfer_gans/"},{"body":"Links Github repo Online documentation Report (in French) Data Journalism Extractor This project is an attempt to create a tool to help journalists extract and process data at scale, from multiple heterogenous data sources while leveraging powerful and complex database, information extraction and NLP tools with limited programming knowledge.\nFeatures This software is based on Apache Flink, a stream processing framework similar to Spark written in Java and Scala. It executes dataflow programs, is highly scalable and integrates easily with other Big Data frameworks and tools such as Kafka, HDFS, YARN, Cassandra or ElasticSearch.\nAlthough you can work with custom dataflow programs that suits your specific needs, one doesn\u0026rsquo;t need to know programming, Flink or Scala to work with this tool and build complex dataflow programs to achieve some of the following operations:\nExtract data from relational databases (Postgres, MySQL, Oracle), NoSQL databases (MongoDB), CSV files, HDFS, etc. Use complex processing tools such as soft string-matching functions, link extractions, etc. Store outputs in multiple different data sinks (CSV files, databases, HDFS, etc.) Documentation Documentation about the project is available at this link.\n","title":"Data journalism extractor","url":"https://hugocisneros.com/projects/data_journalism_extractor/"},{"body":" Github repo Description This project was about creating a tool similar to Arxiv Sanity with additional NLP functionalities for finding similar papers from their abstract.\nI used a concept from [1], which uses earth mover\u0026rsquo;s distance metric between documents represented as normalized bag-of-words. The underlying transport cost between two words is given by their distance in a pre-trained word vector space. The app trains word vectors on all Arxiv abstracts and uses the EMD based metric to compute similarities between papers.\n","title":"Arxiv explorer","url":"https://hugocisneros.com/projects/arxiv_explorer/"}]