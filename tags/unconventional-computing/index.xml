<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Unconventional computing on Hugo Cisneros</title><link>https://hugocisneros.com/tags/unconventional-computing/</link><description>Recent content in Unconventional computing on Hugo Cisneros</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 02 May 2022 10:33:00 +0200</lastBuildDate><atom:link href="https://hugocisneros.com/tags/unconventional-computing/index.xml" rel="self" type="application/rss+xml"/><item><title>Amorphous computing</title><link>https://hugocisneros.com/notes/amorphous_computing/</link><pubDate>Mon, 02 May 2022 10:33:00 +0200</pubDate><guid>https://hugocisneros.com/notes/amorphous_computing/</guid><description>tags Unconventional computing, Self-organization papers (Abelson et al. 2000) resources Wikipedia, CSAIL&amp;rsquo;s website Amorphous computing was coined by Abelson, Knight, Sussman et al. It refers to computational systems composed of a large number of identical parallel devices (processors) with limited computational capacity. The processors interact locally, without particular knowledge of their position in the medium.
From (Abelson et al. 2000):
A colony of cells cooperates to form a multicellular organism under the direction of a genetic program shared by the members of the colony.</description></item><item><title>Chaos computing</title><link>https://hugocisneros.com/notes/chaos_computing/</link><pubDate>Tue, 19 Apr 2022 17:10:00 +0200</pubDate><guid>https://hugocisneros.com/notes/chaos_computing/</guid><description> tags Unconventional computing resources (Munakata et al. 2002) Bibliography T. Munakata, S. Sinha, W.L. Ditto. November 2002. "Chaos Computing: Implementation of Fundamental Logical Gates by Chaotic Elements". IEEE Transactions on Circuits and Systems I: Fundamental Theory and Applications 49 (11):1629â€“33. DOI.</description></item><item><title>Reservoir computing</title><link>https://hugocisneros.com/notes/reservoir_computing/</link><pubDate>Tue, 15 Mar 2022 11:41:00 +0100</pubDate><guid>https://hugocisneros.com/notes/reservoir_computing/</guid><description>tags Machine learning, Unconventional computing, Unsupervised learning Reservoir computing is a term used to describe a class of machine learning algorithms that rely on transient dynamics of a dynamical system to implement and manipulate goal-related information.
The most famous example is echo-state networks, which uses random recurrent neural networks as reservoirs, but other dynamical systems can also be used.
Reservoir computing with cellular automata Reservoir computing can use cellular automata as the reservoir.</description></item><item><title>Computing in cellular automata</title><link>https://hugocisneros.com/notes/computing_in_cellular_automata/</link><pubDate>Wed, 01 Sep 2021 17:30:00 +0200</pubDate><guid>https://hugocisneros.com/notes/computing_in_cellular_automata/</guid><description>tags Unconventional computing, Cellular automata resources (Mitchell 2005; Wolfram 2002) Cellular automata are computational models capable of interesting emergent behavior. A major challenge is to understand which CA rules are doing useful or efficient computations. It is not clear how these systems could be programmed or made to compute a particular function.
Hand-engineered CA rules Below images show CA rules that can compute non trivial functions (Images are from (Wolfram 2002), see A new kind of science online ).</description></item></channel></rss>